#  _____ __  __ _   ___  __   ____ ___  _   _ _____ ___ ____
# |_   _|  \/  | | | \ \/ /  / ___/ _ \| \ | |  ___|_ _/ ___|
#   | | | |\/| | | | |\  /  | |  | | | |  \| | |_   | | |  _
#   | | | |  | | |_| |/  \  | |__| |_| | |\  |  _|  | | |_| |
#   |_| |_|  |_|\___//_/\_\  \____\___/|_| \_|_|   |___\____|
#
# Ken Custom Tmux Config (updated: 1/4/2020)
#
# Notes:
#  bind-key       = bind key to PREFIX
#  bind-key -n    = bind key to ALT without using PREFIX first
#  bind-key -r    = allow key to repeat
#
# Unbind all keys. This guarantees a clean slate.
#unbind -a

# Remap prefix from 'C-b' to 'C-a'
#unbind C-b
#set -g prefix C-a
#bind C-a send-prefix

# Another prefix alternative using ` key
#set -g prefix `

# Upgrade $TERM
#set -g default-terminal "tmux-256color" 
set -g default-terminal "screen-256color" 
# 24-bit Tc (true colors) (minimum tmux v2.6) ( :Tc )
# Enables Italics ( :sitm ) ( :sitm=\E[3m )
# Enables PageUp/PageDown to scroll text ( :smcup@:rmcup@ )
#set-option -ga terminal-overrides ",*256col*:Tc"
set-option -ga terminal-overrides ",*256col*:Tc:smcup@:rmcup@"
#set-option -ga terminal-overrides ",*256col*:Tc:sitm=\E[3m:smcup@:rmcup@"

# Time in milliseconds for which tmux waits after an escape
set-option -g escape-time 0

# Focus events enabled for terminals that support them
set -g focus-events on

# History settings
set -g history-limit 10000
set -g history-file ~/.tmux/tmuxhistory

# Pass keys through terminal and tmux
set-window-option -g xterm-keys on

# Show error messages long enough to read them
set -g display-time 1500

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Renumber panes on closeures
set -g renumber-windows on

# Makes it such that the window is only resized if the smaller client is actively looking at it.
setw -g aggressive-resize on

### MOUSE MODE ######################
# Enable/Disable mouse mode (default on) [Note: hold shift key to select the text using mouse]
set -g mouse on
#bind m set -g mouse off \; display-message "Mouse: OFF"
#bind M set -g mouse on \; display-message "Mouse: ON"

# Bind [ and ] to some common used layout
#bind [ select-layout even-horizontal
#bind ] select-layout even-vertical

# Drag to re-order windows
bind -n MouseDrag1Status swap-window -t=

# Double click on the window list to open a new window
bind -n DoubleClick1Status new-window

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
#bind -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N 2 scroll-up
#bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 2 scroll-down
### END MOUSE MODE ######################

# Reload config file
bind C-r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Kill window/server
bind k confirm kill-window
bind K confirm kill-server

# Enable locking (using vlock)
#set -g lock-command vlock
#set -g lock-after-time 0 # Seconds; 0 = never
#bind C-l lock-session

# New window and retain cwd
bind c new-window -c "#{pane_current_path}"

# Command that opens SSH connection in new window, renames it and changes background color
#bind M-s command-prompt -p "ssh:" "new-window -n [ssh]%1 'ssh %1' ; select-pane -P 'bg=colour236'"
bind M-s command-prompt -p "ssh:" "new-window -n [ssh]%1 'ssh %1'"

# Name & create new session / window
bind S command-prompt -p "Name of new session:" "new-session -s '%%'"
bind C command-prompt -p "Name of new window:" "new-window -n '%%'"

# Move window to session with prompt
bind M command-prompt -p "Move current window to session name:" "move-window -t '%%'"
bind m command-prompt -p "Join current pane to window #:" "join-pane -t ':%%'"
bind j command-prompt -p "Join last active pane to current window:" "join-pane -s !"
# built-in break-pane hotkey:   c-b !
#bind M-m command-prompt -p "Break current pane to its own window:" "break-pane -t :"

# Rename windows automatically
#set-option -g allow-rename off
set-window-option -g automatic-rename on

# Rename session / window
bind R command-prompt -I "#{session_name}" "rename-session '%%'"
bind r command-prompt -I "#{window_name}" "rename-window '%%'"

# Prompt to rename session / window right after it is created
#set-hook -g after-new-session 'command-prompt -I "#{session_name}" "rename-session '%%'"'
#set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Save session to bash script
#bind C-s run-shell ~/.tmux/scripts/tmux-save-session.sh \; display-message "Session saved to bash file..."

# Launch app with hotkey without activity monitor
bind C-L command-prompt -p "(activity-monitor:disabled) Command:" "new-window '%%' \; set-option -w monitor-activity off"
#bind C-L command-prompt -p "(activity-monitor:disabled) Command:" "new-window '%%' \; set-option -w monitor-activity off \; rename-window '%1'"

# Synchronize panes toggle
#bind C-q setw synchronize-panes
bind C-s setw synchronize-panes

# Split pane with same directory
unbind '"'
unbind '%'
bind '-' split-window -v -c "#{pane_current_path}"
bind '\' split-window -h -c "#{pane_current_path}"
bind '_' split-window -fv -c "#{pane_current_path}"
bind '|' split-window -fh -c "#{pane_current_path}"

# Swap windows left or right
# Using ALT
#bind -n C-S-Left swap-window -t -1
#bind -n C-S-Right swap-window -t +1
# Using PREFIX
bind C-Left swap-window -t -1
bind C-Right swap-window -t +1

# Select pane and windows
bind -r C-[ previous-window
bind -r C-] next-window
#bind -r [ select-pane -t :.-
#bind -r ] select-pane -t :.+
#bind -r Tab last-window   # cycle thru MRU tabs
bind -r C-o swap-pane -D

### Switch panes and windows using ALT key instead of PREFIX ######
# Switch panes
bind-key -n M-h select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R

# Switch windows
#unbind-key n
bind-key -n M-p previous-window
bind-key -n M-n next-window
bind-key -n M-1 select-window -t:1
bind-key -n M-2 select-window -t:2
bind-key -n M-3 select-window -t:3
bind-key -n M-4 select-window -t:4
bind-key -n M-5 select-window -t:5
bind-key -n M-6 select-window -t:6
bind-key -n M-7 select-window -t:7
bind-key -n M-8 select-window -t:8
bind-key -n M-9 select-window -t:9
bind-key -n M-0 select-window -t:0

# Switch sessions
bind-key -n M-l switch-client -l
bind-key -n M-P switch-client -p
bind-key -n M-N switch-client -n
#####################################################################

# Use vim key bindings
set-option -g mode-keys vi
set-option -g status-keys vi

### COPY/PASTE ######################################################
# Built In Tmux Copy/Paste
# C-b [       Enter copy mode
# C-b space   Start selecting text to copy
# C-b enter   Finish by copying selection to buffer
# C-b ]       Paste recent buffer
# C-b =       Choose which buffer to paste interactively from a list
# C-b #       List all paste buffers
# C-b -       Delete the most recently copied buffer of text
# Extra selections and Vi keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi l send-keys -X select-line
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection
# Paste Buffer
#bind-key p paste-buffer -s ""
#bind-key P choose-buffer "paste-buffer -b '%%' -s ''"

################################################################################
##                                    DESIGN                                  ##
################################################################################

# ---------------------------------------------------------------------------
# 108 green / 180 brown / 182 pink / 202 orange / 117 lightblue
TMUX_COLOUR_MAIN="colour108"
TMUX_COLOUR_ALT="colour2"
TMUX_COLOUR_TEXT="colour0"

# Bell / Activity settings ---------------------------------------------------
set -g visual-bell off
set -g visual-silence off
set -g bell-action none
# Monitor activities in other windows
setw -g monitor-activity on
set -g visual-activity off

# Status Bell Style -----------------------------------------------------------
setw -g window-status-bell-style "fg=colour255,bg=colour1"

# Status bar settings ---------------------------------------------------------
set -g status-interval 5        # Status bar update interval
set -g status-justify left      # Window status alignment [left|centre|right]
set -g status-position bottom   # Status bar position

# Basic status bar colors ------------------------------------------------------
set -g status-style "fg=colour255,bg=default"

# Left side of status bar ------------------------------------------------------
#set -g status-left-style "fg=default,bg=default"
set -g status-left-length 150
set -g status-left "#[fg=$TMUX_COLOUR_TEXT,bg=$TMUX_COLOUR_MAIN]#{?client_prefix,#[bg=$TMUX_COLOUR_ALT],}[#S]#[bg=default] "
#set -ga status-left "#[fg=$TMUX_COLOUR_TEXT,bg=$TMUX_COLOUR_MAIN][#I:#P]#[default] " ## [1:1]

# Middle Current window status (Active) -----------------------------------------
#set -g window-status-current-style "fg=default,bg=default"
set -g window-status-current-format "#[fg=$TMUX_COLOUR_TEXT,bg=$TMUX_COLOUR_MAIN] #I #[fg=brightwhite,bg=colour240] #W#F #[default]"

# Middle Window status (Inactive) ----------------------------------------------
set -g window-status-format "#[fg=$TMUX_COLOUR_MAIN] #I #[fg=white,bg=colour236] #W#F #[default]"

# Middle Window with activity status color -------------------------------------
#set -g window-status-activity-style "fg=default,bg=default"

# Middle Window separator -------------------------------------------------------
set -g window-status-separator " "

# Right side of status bar -----------------------------------------------------
#set -g status-right-style "fg=default,bg=default"
set -g status-right-length 200

set -g status-right "#[fg=brightwhite,bg=default]"
#set -ga status-right "#(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD) #{pane_current_path} "
#set -ga status-right "#{pane_current_path} "
#set -ga status-right "#[fg=$TMUX_COLOUR_TEXT,bg=$TMUX_COLOUR_ALT]#{?selection_present,[COPY-MODE],}#{?window_bell_flag,[BELL],}#{?window_zoomed_flag,[ZOOM],}#{?pane_synchronized,[SYNC-PANES],}#{session_alerts}#{?client_prefix,[PREFIX],}#[default] "
set -ga status-right "#[fg=$TMUX_COLOUR_TEXT,bg=$TMUX_COLOUR_ALT]#{?selection_present,[COPY-MODE],}#{?window_bell_flag,[BELL],}#{?window_zoomed_flag,[ZOOM],}#{?pane_synchronized,[SYNC-PANES],}#{session_alerts}#[default] "

#set -ga status-right "#[fg=$TMUX_COLOUR_TEXT,bg=$TMUX_COLOUR_MAIN][#I:#P]#[default] " ## [1:1]
#set -ga status-right "#[fg=$TMUX_COLOUR_TEXT,bg=$TMUX_COLOUR_MAIN][#I:#W]#[default] " ## [Index:Window]
#set -ga status-right "#[fg=$TMUX_COLOUR_TEXT,bg=$TMUX_COLOUR_MAIN][#P:#T]#[default] " ## [Pane:Title]

#set -ga status-right "Free: #(free -h | awk '/Mem:/ { printf $7 }') | Load: #(cut -d ' ' -f 1-3 /proc/loadavg) " #### Free: 12Gi | Load: 0.23 0.24 0.17
#set -ga status-right "#(~/.tmux/scripts/tmux-mem-cpu-load.sh 1) " #### 3942/15972MB [||||   ] 20% 0.81 0.25 0.17
set -ga status-right "#{sysstat_cpu} | #{sysstat_mem} | #{sysstat_swap} | #{sysstat_loadavg} " #### CPU: 0.0% | MEM:23% | SW:2% | 0.07 0.03 0.02

set -ga status-right "#[fg=$TMUX_COLOUR_TEXT,bg=$TMUX_COLOUR_MAIN]"
set -ga status-right "#{?client_prefix,#[bg=$TMUX_COLOUR_ALT],}[#H]#[bg=default] "
#set -ga status-right "[#H]"
set -ga status-right "#[fg=default,bg=default]"

# Highlight current pane (Main forground/background colors) ---------------------
#set -g window-active-style 'fg=colour255,bg=colour232'  # Current pane
#set -g window-style 'fg=colour7,bg=colour234'   # All panes

# Pane border -------------------------------------------------------------------
#set -g pane-border-format " #{pane_current_command} "
set -g pane-border-style "fg=colour255,bg=colour7"  # Inactive
set -g pane-active-border-style "fg=colour255,bg=$TMUX_COLOUR_MAIN"  # Active

# Pane number indicator (usually bound to cb-q) ---------------------------------
set -g display-panes-active-colour colour9  # Current pane
set -g display-panes-colour colour12  # Inactive pane

# Clock mode ---------------------------------------------------------------------
set -g clock-mode-colour $TMUX_COLOUR_MAIN
set -g clock-mode-style 12

# Message (ctrl-b) ----------------------------------------------------------------
set -g message-style "fg=$TMUX_COLOUR_TEXT,bg=$TMUX_COLOUR_MAIN"
set -g message-command-style "fg=colour4,bg=colour0"

# Mode (usually bound to cb-w) -----------------------------------------------------
set -g mode-style "fg=$TMUX_COLOUR_TEXT,bg=$TMUX_COLOUR_MAIN"

#########################
### Source Theme File ###
#########################
#run-shell "tmux source-file ~/.tmux/themes/base16.theme"

###############
### PLUGINS ###
###############
set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'thewtex/tmux-mem-cpu-load'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-net-speed'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
