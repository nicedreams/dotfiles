#!/bin/bash
# ~/.bash_kenfunctions
# Custom functions not generally needed across multiple systems
#------------------------------------------------------------------------------
### KEN FUNCTIONS
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
### COLORS
#------------------------------------------------------------------------------
# Normal Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White
# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White
# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White
#
NC="\e[m"               # Color Reset

function MSG_ALERT() { printf "%s${White}${On_Red}${1}${NC}\n" ;}

# Print temp of zipcode on command line
function ken-weather() { curl -s "http://rss.accuweather.com/rss/liveweather_rss.asp?metric=2&locCode=85226" | sed -n '/Currently:/ s/.*: \(.*\): \([0-9]*\)\([CF]\).*/\2Â°\3, \1/p' ;}

## ranger
function ranger() {
  if ! /usr/bin/ranger
  then
    read -rp "Ranger not found! Press any key to install ranger and utils!"
    apt install ranger atool highlight caca-utils w3m mediainfo poppler-utils
  fi
}

## fzf ken-notes
function ken-notes() {
  cd "${HOME}"/notes && fzf --bind "f1:execute($EDITOR {})" --bind "f2:execute(less -Rf {})" --bind "f3:execute(highlight -O ansi --force {} |less -RSf)" --bind "f4:execute(bat {})" --bind "ctrl-e:execute($EDITOR {})" --bind "enter:execute(bat --color=always {} || less -Rf {})" --preview-window=right:80% --preview "(bat -p --color=always --line-range 1:50 {} || head -50)" --color dark,hl:33,hl+:37,fg+:235,bg+:136,fg+:254 --color info:254,prompt:37,spinner:108,pointer:235,marker:235 || cd -
}

# simple note function
function note()
{
  # if file doesn't exist, create it
  [ -f "${HOME}"/.notes ] || touch "${HOME}"/.notes
  # no arguments, print file
  if [ "$#" = 0 ]
  then
    cat "${HOME}"/.notes
  # edit file
  elif [ "$1" = -e ]; then
    "${EDITOR}" "${HOME}"/.notes
  # add seperator
  elif [ "$1" = -s ]; then
    echo "-------------------------------------------------" >> "${HOME}"/.notes
  # add date/time to note
  elif [ "$1" = -d ]; then
    echo "$(date "+%c")" >> "${HOME}"/.notes
  # clear file
  elif [ "$1" = -c ]; then
    > "${HOME}"/.notes
  # add all arguments to file
  else
    echo "$@" >> "${HOME}"/.notes
  fi
}

# Write a horizontal line of characters
hr() {
  # shellcheck disable=SC2183
  printf '%*s\n' "${1:-$COLUMNS}" | tr ' ' "${2:-#}"
}
